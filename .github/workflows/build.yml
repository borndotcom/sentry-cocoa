name: Build
on:
  push:
    branches:
      - main
      - release/**

  pull_request:
    paths:
      - "Sources/**"
      - "test-server/**"
      - "Samples/**"
      - ".github/workflows/build.yml"
      - "fastlane/**"
      - "scripts/ci-select-xcode.sh"
      - Sentry.xcworkspace/**
      - Sentry.xcodeproj/**
      - Gemfile.lock
      - "Package.swift"
      - ".github/workflows/build-xcframework.yml"
      - "scripts/build-xcframework-slice.sh"
      - "scripts/assemble-xcframework.sh"
      - ".github/workflows/build-xcframework-variant-slices.yml"
      - ".github/workflows/assemble-xcframework-variant.yml"
      - ".github/workflows/ui-tests-common.yml"
      - Samples/macOS-SPM-CommandLine/**
      - Samples/SPM-Dynamic/**

# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # We had issues that the release build was broken on main.
  # With this we catch potential issues already in the PR.
  ios-swift-release:
    name: Release Build of iOS Swift
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - run: ./scripts/ci-select-xcode.sh 16.3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: make init-ci-build
      - run: make xcode-ci
      - name: Run Fastlane
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
          FASTLANE_KEYCHAIN_PASSWORD: ${{ secrets.FASTLANE_KEYCHAIN_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME }}
        run: bundle exec fastlane build_ios_swift

  build-sample:
    name: Sample ${{ matrix.scheme }}
    runs-on: macos-15
    strategy:
      fail-fast: false
      matrix:
        # other sample projects are built in ui-tests
        include:
          - scheme: macOS-Swift
          - scheme: iOS13-Swift
          - scheme: watchOS-Swift WatchKit App
          - scheme: macOS-SwiftUI
          - scheme: SessionReplay-CameraTest
          - scheme: visionOS-Swift

    steps:
      - uses: actions/checkout@v4
      - run: ./scripts/ci-select-xcode.sh 16.3
      - run: make init-ci-build
      - run: make xcode-ci

      # Note: Due to complexity in implementing the CODE_SIGNING_ALLOWED flag in the sentry-xcodebuild.sh script,
      #       we did not yet migrate this step to use the script yet.
      - run: >-
          env NSUnbufferedIO=YES
          xcodebuild
          -workspace Sentry.xcworkspace
          -scheme '${{matrix.scheme}}'
          -configuration Debug
          CODE_SIGNING_ALLOWED="NO"
          build

      - name: Archiving Raw Build Logs
        uses: actions/upload-artifact@v4
        if: ${{ failure() || cancelled() }}
        with:
          name: raw-build-output-scheme-${{matrix.scheme}}
          path: |
            raw-build-output.log

  check-debug-without-UIKit:
    name: Check no UIKit linkage (DebugWithoutUIKit)
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Build for Debug
        run: |
          ./scripts/sentry-xcodebuild.sh \
            --platform iOS \
            --os latest \
            --ref ${{ github.ref }} \
            --command build \
            --device "iPhone 14" \
            --configuration DebugWithoutUIKit \
            --derived-data uikit-check-build
      - name: Ensure UIKit is not linked
        run: ./scripts/check-uikit-linkage.sh DebugWithoutUIKit uikit-check-build unlinked SentryWithoutUIKit

  check-release-without-UIKit:
    name: Check no UIKit linkage (ReleaseWithoutUIKit)
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Build for Release
        run: |
          ./scripts/sentry-xcodebuild.sh \
            --platform iOS \
            --os latest \
            --ref ${{ github.ref }} \
            --command build \
            --device "iPhone 14" \
            --configuration ReleaseWithoutUIKit \
            --derived-data uikit-check-build
      - name: Ensure UIKit is not linked
        run: ./scripts/check-uikit-linkage.sh ReleaseWithoutUIKit uikit-check-build unlinked SentryWithoutUIKit

  check-debug-with-UIKit:
    name: Check UIKit linkage (Debug)
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Build for Debug
        run: |
          ./scripts/sentry-xcodebuild.sh \
            --platform iOS \
            --os latest \
            --ref ${{ github.ref }} \
            --command build \
            --device "iPhone 14" \
            --configuration Debug \
            --derived-data uikit-check-build
      - name: Ensure UIKit is linked
        run: ./scripts/check-uikit-linkage.sh Debug uikit-check-build linked Sentry

  check-release-with-UIKit:
    name: Check UIKit linkage (Release)
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Build for Release
        run: |
          ./scripts/sentry-xcodebuild.sh \
            --platform iOS \
            --os latest \
            --ref ${{ github.ref }} \
            --command build \
            --device "iPhone 14" \
            --configuration Release \
            --derived-data uikit-check-build
      - name: Ensure UIKit is linked
        run: ./scripts/check-uikit-linkage.sh Release uikit-check-build linked Sentry

    # The compiler only evaluates SentryAsyncSafeLogs that get printed based on the SENTRY_ASYNC_SAFE_LOG_LEVEL.
    # So if the level is set to error, which is the default, and a SENTRY_ASYNC_SAFE_LOG_DEBUG has a compiler error,
    # you only get the compiler error when setting the SENTRY_ASYNC_SAFE_LOG_LEVEL to SENTRY_ASYNC_SAFE_LOG_LEVEL_DEBUG or lower.

  check-compiling-async-safe-logs:
    name: Check compiling Async Safe Logs
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4

      # If the SentryAsyncSafeLog doesn't contain the SENTRY_ASYNC_SAFE_LOG_LEVEL_ERROR this fails.
      - name: Async Safe Log Level is Error
        run: grep -c "SENTRY_ASYNC_SAFE_LOG_LEVEL SENTRY_ASYNC_SAFE_LOG_LEVEL_ERROR" Sources/Sentry/SentryAsyncSafeLog.h

      - name: Set Async Safe Log Level to Debug
        run: |
          sed -i '' 's/#define SENTRY_ASYNC_SAFE_LOG_LEVEL SENTRY_ASYNC_SAFE_LOG_LEVEL_ERROR/#define SENTRY_ASYNC_SAFE_LOG_LEVEL SENTRY_ASYNC_SAFE_LOG_LEVEL_TRACE/' Sources/Sentry/SentryAsyncSafeLog.h
        shell: bash

      - run: ./scripts/ci-select-xcode.sh 16.3

      - name: Build for Debug
        run: |
          ./scripts/sentry-xcodebuild.sh \
            --platform iOS \
            --os latest \
            --ref ${{ github.ref }} \
            --command build \
            --device "iPhone 16" \
            --configuration Debug

  build-xcframework-variant-slices:
    uses: ./.github/workflows/build-xcframework-variant-slices.yml
    with:
      name: ${{matrix.variant.name}}
      suffix: ${{matrix.variant.suffix}}
      macho-type: ${{matrix.variant.macho-type}}
      configuration-suffix: ${{matrix.variant.configuration-suffix}}
      variant-id: ${{matrix.variant.id}}
      release-version: ${{ github.event.inputs.version }}
    strategy:
      matrix:
        variant:
          - name: Sentry
            macho-type: mh_dylib
            suffix: "-Dynamic"
            id: sentry-dynamic
          - name: Sentry
            macho-type: staticlib
            id: sentry-static
          - name: SentrySwiftUI
            macho-type: mh_dylib
            id: sentry-swiftui
          - name: Sentry
            macho-type: mh_dylib
            suffix: "-WithoutUIKitOrAppKit"
            configuration-suffix: WithoutUIKit
            id: sentry-withoutuikit-dynamic

  assemble-xcframework-variant:
    needs: build-xcframework-variant-slices
    uses: ./.github/workflows/assemble-xcframework-variant.yml
    secrets: inherit
    with:
      name: ${{matrix.variant.name}}
      suffix: ${{matrix.variant.suffix}}
      configuration-suffix: ${{matrix.variant.configuration-suffix}}
      variant-id: ${{matrix.variant.id}}
      signed: true
    strategy:
      matrix:
        variant:
          - name: Sentry
            macho-type: mh_dylib
            suffix: "-Dynamic"
            id: sentry-dynamic
          - name: Sentry
            macho-type: staticlib
            id: sentry-static
          - name: SentrySwiftUI
            macho-type: mh_dylib
            id: sentry-swiftui
          - name: Sentry
            macho-type: mh_dylib
            suffix: "-WithoutUIKitOrAppKit"
            configuration-suffix: WithoutUIKit
            id: sentry-withoutuikit-dynamic

  validate-xcframework:
    name: Validate XCFramework
    runs-on: macos-13
    needs: assemble-xcframework-variant
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: xcframework-${{github.sha}}-sentry-static
          path: Carthage/
      - uses: actions/download-artifact@v4
        with:
          pattern: xcframework-${{github.sha}}-sentry-swiftui
          path: Carthage/
      - run: find Carthage -name "*.zip" -print0 | xargs -t0I @ mv @ Carthage
      - run: ./scripts/ci-select-xcode.sh 15.2
      - run: make build-xcframework-sample

  # Use github.event.pull_request.head.sha instead of github.sha when available as
  # the github.sha is be the pre merge commit id for PRs.
  # See https://github.community/t/github-sha-isnt-the-value-expected/17903/17906.
  validate-spm:
    name: Validate Swift Package Manager
    runs-on: macos-13
    needs: assemble-xcframework-variant
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: xcframework-${{github.sha}}-*
          merge-multiple: true
      - name: Change path of the framework
        run: |
          sed -i '' 's/url.*//g' Package.swift
          sed -i '' 's/checksum: ".*" \/\/Sentry-Static/path: "Sentry.xcframework.zip"/g' Package.swift
          sed -i '' 's/checksum: ".*" \/\/Sentry-Dynamic/path: "Sentry-Dynamic.xcframework.zip"/g' Package.swift
        shell: bash
      - run: swift build
        working-directory: Samples/macOS-SPM-CommandLine

  validate-spm-dynamic:
    name: Validate Swift Package Manager Dynamic
    runs-on: macos-13
    needs: assemble-xcframework-variant
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: xcframework-${{github.sha}}-*
          merge-multiple: true
      - name: Change path of the framework
        run: |
          sed -i '' 's/url.*//g' Package.swift
          sed -i '' 's/checksum: ".*" \/\/Sentry-Static/path: "Sentry.xcframework.zip"/g' Package.swift
          sed -i '' 's/checksum: ".*" \/\/Sentry-Dynamic/path: "Sentry-Dynamic.xcframework.zip"/g' Package.swift
        shell: bash
      - run: swift build
        working-directory: Samples/SPM-Dynamic

  swift-build:
    name: Build with Swift
    runs-on: macos-13
    needs: assemble-xcframework-variant
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: xcframework-${{github.sha}}-*
          merge-multiple: true
      - name: Change path of the framework
        run: |
          sed -i '' 's/url.*//g' Package.swift
          sed -i '' 's/checksum: ".*" \/\/Sentry-Static/path: "Sentry.xcframework.zip"/g' Package.swift
          sed -i '' 's/checksum: ".*" \/\/Sentry-Dynamic/path: "Sentry-Dynamic.xcframework.zip"/g' Package.swift
        shell: bash
      - run: swift build

  duplication-tests:
    name: UI Tests for project with Sentry duplicated - V4 # Up the version with every change to keep track of flaky tests
    uses: ./.github/workflows/ui-tests-common.yml
    needs: assemble-xcframework-variant
    with:
      fastlane_command: duplication_test
      xcode_version: 16.4
      macos_version: macos-15
      needs_xcframework: true

  app-metrics:
    name: Collect app metrics
    runs-on: macos-15
    needs: assemble-xcframework-variant
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - run: ./scripts/ci-select-xcode.sh 16.3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - uses: actions/cache@v4
        id: app-plain-cache
        with:
          path: Tests/Perf/test-app-plain.ipa
          key: ${{ github.workflow }}-${{ github.job }}-appplain-${{ hashFiles('fastlane/Fastfile', 'Tests/Perf/test-app-plain/**') }}
      - name: Build test app plain
        if: steps.app-plain-cache.outputs['cache-hit'] != 'true'
        run: bundle exec fastlane build_perf_test_app_plain
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
          FASTLANE_KEYCHAIN_PASSWORD: ${{ secrets.FASTLANE_KEYCHAIN_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME }}
      - uses: actions/download-artifact@v4
        with:
          pattern: xcframework-${{github.sha}}-sentry-dynamic
          path: Carthage/
      - run: find Carthage -name "Sentry-Dynamic.xcframework.zip" -print0 | xargs -t0I @ unzip @ -d Carthage
      - name: Build test app with sentry
        run: bundle exec fastlane build_perf_test_app_sentry
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
          FASTLANE_KEYCHAIN_PASSWORD: ${{ secrets.FASTLANE_KEYCHAIN_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME }}
      - name: Collect app metrics
        uses: getsentry/action-app-sdk-overhead-metrics@v1
        with:
          config: Tests/Perf/metrics-test.yml
          sauce-user: ${{ secrets.SAUCE_USERNAME }}
          sauce-key: ${{ secrets.SAUCE_ACCESS_KEY }}

  prepare-craft-deliverable:
    needs: [
      ios-swift-release,
      build-sample,
      validate-xcframework,
      validate-spm,
      validate-spm-dynamic,
      swift-build,
      duplication-tests,
      app-metrics,
      check-debug-without-UIKit,
      check-debug-with-UIKit,
      check-release-without-UIKit,
      check-release-with-UIKit,
    ]
    runs-on: ubuntu-latest
    #if: startsWith(github.ref, 'refs/heads/release/') == true
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: xcframework-${{github.sha}}-*
          merge-multiple: true
          path: Carthage/

      - name: Archive XCFrameworks for Craft
        uses: actions/upload-artifact@v4
        with:
          name: xcframeworks.zip
          if-no-files-found: error
          path: |
            ${{github.workspace}}/Carthage/*.zip
